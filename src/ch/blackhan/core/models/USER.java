package ch.blackhan.core.models;

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

import java.util.*;
import java.util.logging.*;

import ch.blackhan.core.mqm.*;
import ch.blackhan.core.mqm.util.*;
import ch.blackhan.core.exceptions.*;

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

public class USER {

    ///////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////

    protected static final Logger logger = Logger.getLogger(USER.class.getName());

    ///////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////

    protected final MQ_MANAGER mqm = MQ_MANAGER.unique;

    ///////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////

    private UUID sessionToken = null;

    ///////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////

    public USER(String sessionToken) throws SESSION_EXCEPTION
    {
        this.setSessionToken(sessionToken);
    }

    ///////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////

    public Vector<ACCOUNT> getAccounts() throws SESSION_EXCEPTION
    {
        synchronized (this)
        {
            String req_message = String.format(
                MESSAGE.USER.GET_ACCOUNTS, this.sessionToken
            );

            String rep_message = this.mqm.communicate(req_message);

            StringTokenizer st = new StringTokenizer(
                rep_message.substring(req_message.length()), "|"
            );

            String result = st.nextToken();
            if (result.compareTo("SESSION_ERROR") == 0)
            {
                throw new SESSION_EXCEPTION(this.sessionToken.toString());
            }
            else
            {
                return new Vector<ACCOUNT>(); //@TODO!
            }
        }
    }

    ///////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////

    public final UUID getSessionToken()
    {
        return this.sessionToken;
    }

    public final void setSessionToken(String sessionToken) throws SESSION_EXCEPTION
    {
        try
        {
            this.sessionToken = UUID.fromString(sessionToken);
        }
        catch (IllegalArgumentException ex)
        {
            throw new SESSION_EXCEPTION(ex.toString());
        }
    }

    ///////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////
}
